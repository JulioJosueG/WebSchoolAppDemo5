@model X.PagedList.IPagedList<WebSchoolAppUI.Models.Profesore>
@using X.PagedList.Mvc.Core;

@{
    ViewData["Title"] = "Profesores";
}
<style>
    .ul.pagination {
        display: inline-block;
        padding: 0;
        margin: 0;
    }

    ul.pagination li {
        display: inline;
    }

        ul.pagination li a {
            color: black;
            float: left;
            padding: 8px 16px;
            text-decoration: none;
            transition: background-color .3s;
        }

            ul.pagination li a.active {
                background-color: #4CAF50;
                color: white;
            }

            ul.pagination li a:hover:not(.active) {
                background-color: #ddd;
            }
</style>
<h1>Profesores</h1>

<p>
    <a asp-action="Create">Crear Nuevo Profesor</a>
</p>
@using (Html.BeginForm("Index", "Profesores", FormMethod.Get))
{
    <p>
        Buscar por nombre: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}
<center>

    <div>
        <table class="table" style="width:100%" border="1">
            <thead>
                <tr>
                    <th>
                        Nombre
                    </th>
                    <th>
                        @Html.ActionLink("Apellido", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th>
                        Cedula
                    </th>

                    <th>
                        @Html.ActionLink("Asignatura", "Index", new { sortOrder = ViewBag.AsignaturaSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th>
                        @Html.ActionLink("Centro", "Index", new { sortOrder = ViewBag.CentroSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>

                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Nombre)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Apellido)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Cedula)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.IdAsignaturaNavigation.Nombre)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.IdCentroNavigation.Nombre)
                        </td>

                        <td>
                            <a asp-action="Edit" asp-route-id="@item.IdProfesor">Editar</a> |
                            <a asp-action="Details" asp-route-id="@item.IdProfesor">Detalles</a> |
                            <a asp-action="Delete" asp-route-id="@item.IdProfesor">Eliminar</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</center>

<br />
<div class="mb-2">
    Pagina @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount
</div>

<div class="d-flex justify-content-center">
    @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

</div>
